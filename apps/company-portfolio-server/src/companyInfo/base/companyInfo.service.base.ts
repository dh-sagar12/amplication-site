/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CompanyInfo as PrismaCompanyInfo } from "@prisma/client";

export class CompanyInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CompanyInfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.companyInfo.count(args);
  }

  async companyInfos(
    args: Prisma.CompanyInfoFindManyArgs
  ): Promise<PrismaCompanyInfo[]> {
    return this.prisma.companyInfo.findMany(args);
  }
  async companyInfo(
    args: Prisma.CompanyInfoFindUniqueArgs
  ): Promise<PrismaCompanyInfo | null> {
    return this.prisma.companyInfo.findUnique(args);
  }
  async createCompanyInfo(
    args: Prisma.CompanyInfoCreateArgs
  ): Promise<PrismaCompanyInfo> {
    return this.prisma.companyInfo.create(args);
  }
  async updateCompanyInfo(
    args: Prisma.CompanyInfoUpdateArgs
  ): Promise<PrismaCompanyInfo> {
    return this.prisma.companyInfo.update(args);
  }
  async deleteCompanyInfo(
    args: Prisma.CompanyInfoDeleteArgs
  ): Promise<PrismaCompanyInfo> {
    return this.prisma.companyInfo.delete(args);
  }
}
