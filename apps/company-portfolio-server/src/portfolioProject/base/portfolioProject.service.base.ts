/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PortfolioProject as PrismaPortfolioProject,
} from "@prisma/client";

export class PortfolioProjectServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PortfolioProjectCountArgs, "select">
  ): Promise<number> {
    return this.prisma.portfolioProject.count(args);
  }

  async portfolioProjects(
    args: Prisma.PortfolioProjectFindManyArgs
  ): Promise<PrismaPortfolioProject[]> {
    return this.prisma.portfolioProject.findMany(args);
  }
  async portfolioProject(
    args: Prisma.PortfolioProjectFindUniqueArgs
  ): Promise<PrismaPortfolioProject | null> {
    return this.prisma.portfolioProject.findUnique(args);
  }
  async createPortfolioProject(
    args: Prisma.PortfolioProjectCreateArgs
  ): Promise<PrismaPortfolioProject> {
    return this.prisma.portfolioProject.create(args);
  }
  async updatePortfolioProject(
    args: Prisma.PortfolioProjectUpdateArgs
  ): Promise<PrismaPortfolioProject> {
    return this.prisma.portfolioProject.update(args);
  }
  async deletePortfolioProject(
    args: Prisma.PortfolioProjectDeleteArgs
  ): Promise<PrismaPortfolioProject> {
    return this.prisma.portfolioProject.delete(args);
  }
}
